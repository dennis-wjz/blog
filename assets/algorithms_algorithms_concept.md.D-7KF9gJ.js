import{_ as t,c as e,o as a,a4 as l}from"./chunks/framework.BxgpPnKs.js";const m=JSON.parse('{"title":"算法概念","description":"","frontmatter":{"title":"算法概念","customTag":"algorithms>算法","date":"2024.06.20","editLink":true},"headers":[],"relativePath":"algorithms/algorithms/concept.md","filePath":"algorithms/algorithms/concept.md","lastUpdated":1718976699000}'),r={name:"algorithms/algorithms/concept.md"},i=l('<h1 id="算法基础概念" tabindex="-1">算法基础概念 <a class="header-anchor" href="#算法基础概念" aria-label="Permalink to &quot;算法基础概念&quot;">​</a></h1><p>算法是一组指令或操作步骤，用于在有限时间内解决特定问题。其特点包括问题明确、可行性强，能在有限步骤、时间和内存空间内完成，并且在相同条件下输出始终相同</p><h2 id="算法复杂度" tabindex="-1">算法复杂度 <a class="header-anchor" href="#算法复杂度" aria-label="Permalink to &quot;算法复杂度&quot;">​</a></h2><p>在算法中，我们主要看两个层面的目标：</p><ol><li>**找到问题解法：**正确解法</li><li>**寻找最优解法：**最优解最高效</li></ol><p>衡量算法优劣的指标，主要两个维度：</p><ul><li>**时间效率：**运行时间长短</li><li>**空间效率：**占用内存</li></ul><p>小tips：在深入学习数据结构与算法之前，先对复杂度分析建立初步的了解，以便能够完成简单算法的复杂度分析</p><p>在学习复杂度之前，我们先来了解两个概念，迭代与递归</p><ul><li><strong>迭代</strong>：重复执行直到条件不满足，常见的有for、while循环</li><li><strong>递归</strong>：算法策略，通过调用自身，主要可以拆分成两个阶段： <ol><li>不断调用自身，直到终止条件</li><li>触发终止条件后，逐层返回结果</li></ol></li></ul><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">迭代</th><th style="text-align:center;">递归</th></tr></thead><tbody><tr><td style="text-align:center;">内存空间</td><td style="text-align:center;">少</td><td style="text-align:center;">多</td></tr><tr><td style="text-align:center;">时间效率</td><td style="text-align:center;">高</td><td style="text-align:center;">低</td></tr><tr><td style="text-align:center;">描述</td><td style="text-align:center;"></td><td style="text-align:center;">1. 过深的递归可能导致栈溢出</td></tr></tbody></table><h3 id="时间复杂度" tabindex="-1">时间复杂度 <a class="header-anchor" href="#时间复杂度" aria-label="Permalink to &quot;时间复杂度&quot;">​</a></h3><h3 id="空间复杂度" tabindex="-1">空间复杂度 <a class="header-anchor" href="#空间复杂度" aria-label="Permalink to &quot;空间复杂度&quot;">​</a></h3>',13),n=[i];function o(s,d,c,h,p,_){return a(),e("div",null,n)}const u=t(r,[["render",o]]);export{m as __pageData,u as default};
