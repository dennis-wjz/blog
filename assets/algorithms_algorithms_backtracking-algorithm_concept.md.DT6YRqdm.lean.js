import{_ as a,c as e,o,j as t,a as r}from"./chunks/framework.BxgpPnKs.js";const k=JSON.parse('{"title":"算法概念","description":"","frontmatter":{"title":"算法概念","customTag":"algorithms>算法>回溯算法","date":"2025.01.15","editLink":true},"headers":[],"relativePath":"algorithms/algorithms/backtracking-algorithm/concept.md","filePath":"algorithms/algorithms/backtracking-algorithm/concept.md","lastUpdated":1736924244000}'),c={name:"algorithms/algorithms/backtracking-algorithm/concept.md"},s=t("h1",{id:"回溯算法",tabindex:"-1"},[r("回溯算法 "),t("a",{class:"header-anchor",href:"#回溯算法","aria-label":'Permalink to "回溯算法"'},"​")],-1),i=t("ul",null,[t("li",null,"是一种通过穷举来解决问题的方法，它的核心思想是从一个初始状态出发，暴力搜索所有可能的解决方案，当遇到正确的解则将其记录，直到找到解或者尝试了所有可能的选择都无法找到解为止。"),t("li",null,"回溯算法通常采用“深度优先搜索”来遍历解空间")],-1),l=[s,i];function n(d,h,m,_,p,g){return o(),e("div",null,l)}const f=a(c,[["render",n]]);export{k as __pageData,f as default};
